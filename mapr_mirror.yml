
---
- hosts: localhost
  vars:
    - mirror_path: /var/www/html/releases
    - mirror_base_url: http://package.mapr.com
    - mirror_dict:
        v5.0.0-core:
          dest: "{{mirror_path}}/v5.0.0/redhat"
          filename: "mapr-v5.0.0GA.rpm.tgz"
          url: "{{mirror_base_url}}/releases/v5.0.0/redhat/mapr-v5.0.0GA.rpm.tgz"
        v5.0.0-ecosystem:
          dest: "{{mirror_path}}/ecosystem-5.x/redhat"
          filename: "mapr-ecosystem-5.x-20151216.rpm.tgz"
          url: "{{mirror_base_url}}/releases/ecosystem-5.x/redhat/mapr-ecosystem-5.x-20151216.rpm.tgz"
        v4.1.0-core:
          dest: "{{mirror_path}}/v4.1.0/redhat"
          filename: "mapr-v4.1.0GA.rpm.tgz"
          url: "{{mirror_base_url}}/releases/v4.1.0/redhat/mapr-v4.1.0GA.rpm.tgz"
        v4.1.0-ecosystem:
          dest: "{{mirror_path}}/ecosystem-4.x/redhat"
          filename: "mapr-ecosystem-4.x-20151118.rpm.tgz"
          url: "{{mirror_base_url}}/releases/ecosystem-4.x/redhat/mapr-ecosystem-4.x-20151118.rpm.tgz"
        v3.1.1-core:
          dest: "{{mirror_path}}/v3.1.1/redhat"
          filename: "mapr-v3.1.1GA.rpm.tgz"
          url: "{{mirror_base_url}}/releases/v3.1.1/redhat/mapr-v3.1.1GA.rpm.tgz"
        v3.1.1-ecosystem:
          dest: "{{mirror_path}}/ecosystem/redhat"
          filename: "mapr-ecosystem-20151118.rpm.tgz"
          url: "{{mirror_base_url}}/releases/ecosystem/redhat/mapr-ecosystem-20151118.rpm.tgz"

  tasks:
    - name: install libselinux-python
      yum: name=libselinux-python state=present
      when: ansible_distribution in ('RedHat', 'CentOS')

    - name: install httpd, createrepo, wget
      yum: name={{item}} state=present
      with_items:
        - httpd
        - createrepo
        - wget
      when: ansible_distribution in ('RedHat', 'CentOS', 'Amazon')

    - name: install apache2, createrepo, wget (ubuntu)
      apt: name={{item}} state=present
      with_items:
        - apache2
        - createrepo
        - wget
      when: ansible_distribution in ('Ubuntu', 'Debian')

    - name: start httpd
      service: name=httpd enabled=yes state=started
      when: ansible_distribution in ('RedHat', 'CentOS', 'Amazon')

    - name: start apache2
      service: name=apache2 enabled=yes state=started
      when: ansible_distribution in ('Ubuntu', 'Debian')

    - name: create repo home
      file: path="{{mirror_path}}" mode=0755 state=directory

    - name: create pub dir for gpg keys
      file: path="{{mirror_path}}/pub" state=directory mode=0755

    - name: configure selinux
      selinux: state=permissive policy=targeted
      when: ansible_distribution in ('RedHat', 'CentOS')

    - name: get GPG key
      get_url: dest={{mirror_path}}/pub/{{item}} url={{mirror_base_url}}/releases/pub/{{item}}
      with_items:
        - gnugpg.key
        - maprgpg.key

    - name: download packages
      get_url: dest={{mirror_path}}/{{item.value.filename}} url={{item.value.url}}
      with_dict: mirror_dict

    - name: make the mirror directories
      file: state=directory path={{item.value.dest}} 
      with_dict: mirror_dict

    - name: unpack the tarballs
      unarchive: copy=no dest={{item.value.dest}} src={{mirror_path}}/{{item.value.filename}}
      with_dict: mirror_dict

    - name: create the Redhat repos
      command: createrepo {{item.value.dest}}
      with_dict: mirror_dict
      
    #- name: write v3 repo file
    #  local_action: template src=mapr.v3.repo.j2 dest=./maprtech.v3.repo mode=0644 

    #- name: write v4 repo file
    #  local_action: template src=mapr.v4.repo.j2 dest=./maprtech.v4.repo mode=0644 
